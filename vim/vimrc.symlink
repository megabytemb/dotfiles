" ----------------------------------------------------------------------------
"  Init Vundle
" ----------------------------------------------------------------------------

set nocompatible          " be iMproved damnit! 
filetype off              " required by Vundle
set rtp+=~/.vim/bundle/vundle/

call vundle#rc()

" ----------------------------------------------------------------------------
"  Plugins Ahoy!
" ----------------------------------------------------------------------------

" Let vundle manage Vundle!
" ----------------------------------------------------------------------------
Bundle 'gmarik/vundle'

" Colour Schemes
" ----------------------------------------------------------------------------
" Bundle 'altercation/vim-colors-solarized'
Bundle 'Railscasts-Theme-GUIand256color'
Bundle 'desert256.vim'
Bundle 'vibrantink'

" Git Integration
Bundle 'tpope/vim-git'
Bundle 'tpope/vim-fugitive'

" Programming
" ----------------------------------------------------------------------------
Bundle 'kchmck/vim-coffee-script'
Bundle 'tpope/vim-surround'
Bundle 'ervandew/supertab'
Bundle 'mitechie/pyflakes-pathogen'
Bundle 'fs111/pydoc.vim'
Bundle 'vim-scripts/pep8'
Bundle 'alfredodeza/pytest.vim'
Bundle 'sontek/rope-vim'
Bundle 'vim-ipython'

" hack to resolve issue with miniBufExplorer see ivanov/vim-ipython/issues/7
let g:miniBufExplorerAutoUpdate=0

" Syntax highlight
" ----------------------------------------------------------------------------
Bundle 'tpope/vim-markdown'

" snippets
" ----------------------------------------------------------------------------
Bundle 'msanders/snipmate.vim'

" functionality
" ----------------------------------------------------------------------------
Bundle 'mattn/gist-vim'
Bundle 'sontek/minibufexpl.vim'
Bundle 'Command-T'
Bundle 'The-NERD-tree'
Bundle 'sjl/gundo.vim'
Bundle 'reinh/vim-makegreen'
"Bundle 'vim-scripts/TaskList.vim'

" filetype plugins required for nerd commenter
filetype plugin on
Bundle 'The-NERD-Commenter'
Bundle 'Indent-Guides'

" ----------------------------------------------------------------------------
"  Text Formatting
" ----------------------------------------------------------------------------

set autoindent             " automatic indent new lines
set smartindent            " be smart about it
inoremap # X<BS>#
set nowrap                 " do not wrap lines
set softtabstop=4          " no, four!
set shiftwidth=4           " ..
set tabstop=4
set expandtab              " expand tabs to spaces
set nosmarttab             " fuck tabs
set formatoptions+=n       " support for numbered/bullet lists
"set textwidth=80           " wrap at 80 chars by default
set virtualedit=block      " allow virtual edit in visual block ..
set spelllang=en_au
set foldmethod=indent
set foldlevel=99

" ----------------------------------------------------------------------------
"  Remapping
" ----------------------------------------------------------------------------

" lead with ,
let mapleader = ","

" death to :paste
set pastetoggle=<F2>

" undo, undo, undo!
map <leader>g :GundoToggle<CR>

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" NERDTree
map <leader>n :NERDTreeToggle<CR>

" Hypergit menu
nmap <leader>G   :ToggleGitMenu<CR>

" Quickly save changes to current file
nmap <leader>w :w<CR>

" exit to normal mode with 'jj'
inoremap jj <ESC>

" strips off two full keystrokes from almost every vim command
nnoremap ; :


" reflow paragraph with Q in normal and visual mode
nnoremap Q gqap
vnoremap Q gq

" sane movement with wrap turned on
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

" movement between windows using CTRL + <hjkl> instead of CTRL + W + <hjkl>
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Clipboard on ubuntu (running Vim in gnome-terminal)
vmap <F6> :!xclip -f -sel clip<CR>
map <F7> :-1r !xclip -o -sel clip<CR>

" ----------------------------------------------------------------------------
"  Theme
" ----------------------------------------------------------------------------

" 256 colours, yes please.
set t_Co=256

syntax on
colorscheme railscasts
" transparent background on line numbers; ./doit.now
highlight LineNr guibg=NONE

" ----------------------------------------------------------------------------
"  UI
" ----------------------------------------------------------------------------

set ruler                  " show the cursor position all the time
set noshowcmd              " don't display incomplete commands
set nolazyredraw           " turn off lazy redraw
set number                 " line numbers
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set ch=2                   " command line height
set backspace=2            " allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling
set mouse=a                " so sue me!"
set clipboard=unnamed      " yank/paste is stored/retrieved from OSX clipboard

" ----------------------------------------------------------------------------
" Visual Cues
" ----------------------------------------------------------------------------

set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set ignorecase             " ignore case when searching
set nohlsearch             " don't highlight searches
set visualbell             " shut the fuck up

" ----------------------------------------------------------------------------
" CoffeeScript
" ----------------------------------------------------------------------------
autocmd BufWritePost *.coffee silent CoffeeMake! | redraw

" Sencha builder uses .jsb3 which is just javascript...
au BufNewFile,BufRead *.jsb3 set filetype=javascript

" command-t ignore
set wildignore+=*.o,*.obj,.git,node_modules


" ----------------------------------------------------------------------------
" Add the virtualenv's site-packages to vim path
" ----------------------------------------------------------------------------

" code completion
au FileType python set omnifunc=pythoncomplete#Complete
let g:SuperTabDefaultCompletionType = "context"
set completeopt=menuone,longest,preview

